assert = require 'assert'
{compile} = require '../lib/coffee-script'
UglifyJS = require 'uglify-js'
p = console.log

strip = (code) ->
	ast = UglifyJS.parse(code)
	ast.figure_out_scope()
	# wont compute_char_frequency to keep the code generated is always same.
	# ast.compute_char_frequency();
	ast.mangle_names();
	compressor = UglifyJS.Compressor({warnings: false})
	ast = ast.transform(compressor)
	ast.print_to_string({beautify: true})

code_eq = (src_orig, dest_orig) ->
	try
		src  = strip src_gened = compile(src_orig)
		dest_wrapped = "(function() {\n#{dest_orig}\n\n}).call(this);"
		dest = strip dest_wrapped
		assert.equal src, dest

	catch e
		console.log "<<<<"
		console.log src_orig
		console.log '----'
		console.log src_gened
		console.log "----"
		console.log dest_wrapped
		console.log ">>>>"
		throw e


run = (code, cb) ->
	console.log 'a'
	console.log (compile("(autocb) -> " + code, {bare: true}))
module.exports = {
	code_eq, p, compile, run
}
