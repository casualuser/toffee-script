{p, code_eq} = require './helper'

describe 'if', ->
	it 'simple', ->
		code_eq """
			if a
				b!
			c
		""", """
			var fn;
			fn = function() {
				return c
			}
			if (a) {
					b(function() {
						fn()
					})
			} else {
				fn()
			}
		"""

	it 'nested normal', ->
		code_eq """
			if a
				if b
					c!
				d
			else
				e!
			f!
		""", """
			var f1, f2
			f1 = function() {
				f(function(v) {
					return v
				})
			}

			if (a) {
				f2 = function() {
					d
					f1()
				}
				if (b) {
					c(function() {
						f2()
					})
				} else {
					f2()
				}
			} else {
				e(function() {
					f1()
				})
			}
		"""

	it 'nested forward', ->
		code_eq  """
			if a
				if b
					c!
			d
		""", """
			var f1;
			f1 = function() {
				return d
			}
			if (a) {
				if (b) {
					c(function() {
						f1()
					})
				} else {
					f1()
				}
			} else {
				f1()
			}
		"""

	it 'nested partial', ->
		code_eq """
			if a
				x!
				if b
					return
			x
		""", """
			var _fn;
			_fn = function() {
				return x;
			}

			if (a) {
				x(function() {
					if (b) {
						return;
					}
					_fn();
				})
			} else {
				_fn();
			}
		"""

	it 'if with async condition', ->
		# Need improve
		code_eq """
			if e = a!
				b
		""", """
			var e,
				_this = this;

			(function(_$cb$_1) {
				a(function() {
					_$cb$_1(e = arguments[0]);
				});
			})(function(_$$_0) {
				if (_$$_0) {
					return b;
				}
			});
		"""

describe 'if + autocb', ->
	it 'simple', ->
		code_eq """
			x = (autocb) ->
				if a
					b!
		""", """
			var x
			x = function(autocb) {
				if (a) {
					b(function(v) {
						autocb(v)
					})
				} else {
					autocb()
				}
			}
		"""

	it 'with args', ->
		code_eq """
			x = (autocb) ->
				if a
					y = b!
					y
		""", """
			var x
			x = function(autocb) {
				var y
				if (a) {
					b(function() {
						y = arguments[0]
						autocb(y)
					})
				} else {
					autocb()
				}
			}
		"""

	it 'have next', ->
		code_eq """
			x = (autocb) ->
				if a
					y = b!
				y
		""", """
			var x
			x = function(autocb) {
				var y, _fn
				_fn = function() {
					autocb(y)
				}
				if (a) {
					b(function() {
						y = arguments[0]
						_fn()
					})
				} else {
					_fn()
				}

			}
		"""

describe 'switch', ->
	it 'simple', ->
		code_eq """
			switch x
				when 'a'
					a()
				when 'b'
					b!
				else
					c!
			null
		""", """
			(function(_$cb$_0) {
				switch (x) {
					case 'a':
						_$cb$_0(a());
						break;
					case 'b':
						b(function(_$$_1) {
							_$cb$_0(_$$_1);
						});
						break;
					default:
						c(function(_$$_2) {
							_$cb$_0(_$$_2);
						});
				}
			})(function() {
				return null;
			});
		"""
